[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dq-accelerator"
version = "1.0.0"
description = "A standardized framework for defining, executing, and monitoring data quality rules in Databricks environments"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Data Quality Team", email = "dq-team@company.com"},
]
keywords = ["data-quality", "databricks", "soda", "data-validation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    "pyyaml>=6.0",
    "jsonschema>=4.0",
    "sqlparse>=0.4.0",
    "pydantic>=2.0",
    "pyspark>=3.4.0",
    "soda-core-spark-df>=3.0.0",
    "databricks-sdk>=0.18.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-spark>=0.6.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-spark>=0.6.0",
    "pytest-mock>=3.10",
]

[project.urls]
Homepage = "https://github.com/company/dq-accelerator"
Repository = "https://github.com/company/dq-accelerator.git"
Documentation = "https://github.com/company/dq-accelerator#readme"
"Bug Tracker" = "https://github.com/company/dq-accelerator/issues"

[project.scripts]
dq-incremental = "src.jobs.databricks_job_entries:run_incremental_job"
dq-full = "src.jobs.databricks_job_entries:run_full_job"
dq-metrics-daily = "src.libraries.utils.metrics_jobs:populate_daily_metrics"
dq-metrics-health = "src.libraries.utils.metrics_jobs:generate_health_summary"
dq-metrics-cleanup = "src.libraries.utils.metrics_jobs:cleanup_old_metrics"
dq-metrics-trends = "src.libraries.utils.metrics_jobs:calculate_trends"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-dir]
"" = "."

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pyspark.*",
    "soda.*",
    "yaml.*",
    "jsonschema.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
